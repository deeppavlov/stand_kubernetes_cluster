apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{KUBER_DP_NAME}}
  namespace: stand-demo
spec:
  selector:
    matchLabels:
      app: {{KUBER_DP_NAME}}
  replicas: {{REPLICAS_NUM}}
  template:
    metadata:
      labels:
        app: {{KUBER_DP_NAME}}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values: {{NODE_LIST}}
      containers:
      - name: socialservice
        image: {{KUBER_IMAGE_TAG}}
        resources:
          limits:
            nvidia.com/gpu: {{GPU_UNITS_NUM}}
        ports:
        - name: dp-service
          protocol: TCP
          containerPort: {{PORT}}
        volumeMounts:
        - name: volume-logs
          mountPath: /logs
        - name: volume-components
          mountPath: /root/.deeppavlov
        - name: volume-podinfo
          mountPath: /etc/podinfo
          readOnly: false
        env:
        - name: POD_NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CUDA_VISIBLE_DEVICES
          value: "{{CUDA_VISIBLE_DEVICES}}"
        envFrom:
          - secretRef:
              name: {{SECRET_NAME}}
      volumes:
      - name: volume-logs
        persistentVolumeClaim:
          claimName: logs-hostpath-pvc
      - name: volume-components
        persistentVolumeClaim:
          claimName: components-hostpath-pvc
      - name: volume-podinfo
        downwardAPI:
          items:
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
          - path: "annotations"
            fieldRef:
              fieldPath: metadata.annotations
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - {{DNS_IP}}
